{"version":3,"sources":["App.js","index.js"],"names":["App","useState","topText","setTopText","bottomText","setBottomText","templates","setTemplates","selectedId","setSelectedId","meme","setMeme","useEffect","fetch","then","response","json","data","memes","handleChange","event","fieldName","target","name","fieldValue","value","className","onSubmit","preventDefault","params","template_id","text0","text1","username","password","qs","stringify","success","url","type","onChange","src","alt","map","elem","id","onClick","handleClick","imageId","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"sNAIe,SAASA,IAAO,IAAD,EACEC,mBAAS,IADX,mBACrBC,EADqB,KACZC,EADY,OAEQF,mBAAS,IAFjB,mBAErBG,EAFqB,KAETC,EAFS,OAGMJ,mBAAS,IAHf,mBAGrBK,EAHqB,KAGVC,EAHU,OAIQN,mBAAS,MAJjB,mBAIrBO,EAJqB,KAITC,EAJS,OAKJR,mBAAS,MALL,mBAKrBS,EALqB,KAKfC,EALe,KAM5BC,oBAAU,KACRC,MAAM,qCACHC,KAAMC,GAAaA,EAASC,QAC5BF,KAAME,GAAST,EAAaS,EAAKC,KAAKC,SACxC,IACH,IAAMC,EAAgBC,IACpB,IAAMC,EAAYD,EAAME,OAAOC,KACzBC,EAAaJ,EAAME,OAAOG,MACd,QAAdJ,EACFlB,EAAWqB,GAEXnB,EAAcmB,IAwBlB,OACE,yBAAKE,UAAU,OACb,0BAAMC,SApBYP,IACpBA,EAAMQ,iBACN,IAAMC,EAAS,CACbC,YAAatB,EACbuB,MAAO7B,EACP8B,MAAO5B,EACP6B,SAAU,WACVC,SAAU,sBAGZrB,MAAM,yCAAD,OAA0CsB,IAAGC,UAAUP,KACzDf,KAAMC,GAAaA,EAASC,QAC5BF,KAAME,IACDA,EAAKqB,SACP1B,EAAQK,EAAKC,KAAKqB,SAOpB,2BAAOC,KAAK,OAAOhB,KAAK,MAAME,MAAOvB,EAASsC,SAAUrB,IACxD,2BACEoB,KAAK,OACLhB,KAAK,SACLE,MAAOrB,EACPoC,SAAUrB,IAEZ,2BAAOoB,KAAK,SAASd,MAAM,mBAE7B,yBAAKC,UAAU,QAAQhB,EAAO,yBAAK+B,IAAK/B,EAAMgC,IAAI,KAAQ,MAC1D,yBAAKhB,UAAU,kBACZpB,GACCA,EAAUqC,IAAKC,GACb,yBACEC,GAAID,EAAKC,GACTC,QAAS,KAAMC,OAvCNC,EAuCkBJ,EAAKC,QAtC1CpC,EAAcuC,GADKA,OAwCTP,IAAKG,EAAKN,IACVI,IAAI,QC5DlB,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACtD,EAAD,OAEFiD,I","file":"static/js/main.c0fa3ea0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport qs from \"qs\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const [topText, setTopText] = useState(\"\");\r\n  const [bottomText, setBottomText] = useState(\"\");\r\n  const [templates, setTemplates] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [meme, setMeme] = useState(null);\r\n  useEffect(() => {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((json) => setTemplates(json.data.memes));\r\n  }, []);\r\n  const handleChange = (event) => {\r\n    const fieldName = event.target.name;\r\n    const fieldValue = event.target.value;\r\n    if (fieldName === \"top\") {\r\n      setTopText(fieldValue);\r\n    } else {\r\n      setBottomText(fieldValue);\r\n    }\r\n  };\r\n  const handleClick = (imageId) => {\r\n    setSelectedId(imageId);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const params = {\r\n      template_id: selectedId,\r\n      text0: topText,\r\n      text1: bottomText,\r\n      username: \"xzk03017\",\r\n      password: \"xzk03017@cndps.com\"\r\n    };\r\n    // ?template_id=12324234&text0=ssdf....\r\n    fetch(`https://api.imgflip.com/caption_image?${qs.stringify(params)}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.success) {\r\n          setMeme(json.data.url);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"top\" value={topText} onChange={handleChange} />\r\n        <input\r\n          type=\"text\"\r\n          name=\"bottom\"\r\n          value={bottomText}\r\n          onChange={handleChange}\r\n        />\r\n        <input type=\"submit\" value=\"Generate meme\" />\r\n      </form>\r\n      <div className=\"meme\">{meme ? <img src={meme} alt=\"\" /> : null}</div>\r\n      <div className=\"meme-container\">\r\n        {templates &&\r\n          templates.map((elem) => (\r\n            <img\r\n              id={elem.id}\r\n              onClick={() => handleClick(elem.id)}\r\n              src={elem.url}\r\n              alt=\"\"\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}